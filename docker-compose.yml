services:
  app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: Y_py_masters
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/backend
    working_dir: /backend
    depends_on:
      - db
    environment:
      DB_HOST: db                   
      DB_USER: ${POSTGRES_USER}     
      DB_PASSWORD: ${POSTGRES_PASSWORD} 
      DB_NAME: ${POSTGRES_DB}       
  alembic:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: alembic
    env_file:
      - .env
    volumes:
      - .:/backend
    working_dir: /backend
    entrypoint: ["alembic", "-c", "alembic.ini", "upgrade", "head"]
    depends_on:
      - db  # Ждет, пока PostgreSQL станет доступен
  
  frontend:
   build: ./frontend
   ports:
     - "80:80"
   volumes:
     - ./frontend:/app
     - /app/node_modules
   environment:
     - CHOKIDAR_USEPOLLING=true
   depends_on:
     - app


  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  

volumes:
  postgres_data: