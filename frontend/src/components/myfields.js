// src/pages/MyFieldsPage.jsx
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useNavigate, Link } from 'react-router-dom';
import { API_BASE_URL } from '../config'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π URL API
import Footer from './footer'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ—É—Ç–µ—Ä–∞
import './style/my-fields.css'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

const MyFieldsPage = () => {
  const [fields, setFields] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchFields = async () => {
      try {
        // !!! –í–Ω–∏–º–∞–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ (`) –¥–ª—è —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞.
        // –ü—Ä–∏–º–µ—Ä: const response = await axios.get(`${API_BASE_URL}/my_fields`, {withCredentials: true});
        const response = await axios.get(`${API_BASE_URL}/my_fields`, {withCredentials: true}); // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        if (response.data && Array.isArray(response.data.fields)) {
          setFields(response.data.fields);
        } else {
          // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π
          console.warn("Unexpected data format from /my_fields:", response.data);
          setFields([]); // –û—á–∏—â–∞–µ–º –ø–æ–ª—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–≥—Ä–æ–≤—ã—Ö –ø–æ–ª–µ–π:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä–æ–≤—ã–µ –ø–æ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      } finally {
        setLoading(false);
      }
    };

    fetchFields();
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

  const goToProfile = () => {
    navigate('/profile');
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è
  const goToCreateField = () => {
    navigate('/create_field');
  };

  return (
    <div className="my-fields-page">
      <header className="my-fields-header">
        <h1 className="page-title">–ú–æ–∏ –ò–≥—Ä–æ–≤—ã–µ –ü–æ–ª—è</h1>
        {/* –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ" */}
        <button onClick={goToCreateField} className="add-field-button">
          <span className="button-icon">‚ûï</span> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ
        </button>
        <button onClick={goToProfile} className="profile-button">
          <span className="button-icon">üë§</span> –í–∞—à –ü—Ä–æ—Ñ–∏–ª—å
        </button>
      </header>

      <main className="my-fields-main-content">
        <div className="fields-list-container">
          {loading ? (
            <p className="loading-message">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª–µ–π...</p>
          ) : error ? (
            <p className="error-message">{error}</p>
          ) : fields.length === 0 ? (
            <p className="no-fields-message">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–≥—Ä–æ–≤—ã—Ö –ø–æ–ª–µ–π.</p>
          ) : (
            <ul className="field-list">
              {fields.map((field) => (
                <li key={field.id} className="field-item">
                  {/* !!! –í–Ω–∏–º–∞–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–¥–µ—Å—å —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ (`) –¥–ª—è —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞. */}
                  {/* –ü—Ä–∏–º–µ—Ä: <Link to={`/field/${field.id}`} className="field-link"> */}
                  <Link to={`/field/${field.id}`} className="field-link"> {/* –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ */}
                    <span className="field-name">{field.name}</span>
                    <span className="arrow-icon">‚Üí</span>
                  </Link>
                </li>
              ))}
            </ul>
          )}
        </div>
      </main>

      <Footer />
    </div>
  );
};

export default MyFieldsPage;
